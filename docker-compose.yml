services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - kitchensink-network

  # Redis Cache
  redis:
    image: redis:7
    container_name: kitchensink-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - kitchensink-network

  # Spring Boot Backend API
  backend:
    build:
      context: ./kitchen-sink-rest
      dockerfile: Dockerfile
    container_name: kitchensink-app-rest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/kitchensinkdb
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=kitchensinkdb
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      - mongodb
      - redis
    networks:
      - kitchensink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Angular Frontend
  frontend:
    build:
      context: ./kitchensink-user-app
      dockerfile: Dockerfile
    container_name: kitchensink-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    environment:
      - API_BASE_URL=http://backend:8080/api  # Use backend service name, not localhost
    depends_on:
      - backend
    networks:
      - kitchensink-network

  # SonarQube Database
  sonar-db:
    image: postgres:15
    container_name: sonarqube-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_data:/var/lib/postgresql/data
    networks:
      - kitchensink-network

  # SonarQube Server
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonarqube
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    depends_on:
      - sonar-db
    networks:
      - kitchensink-network

# Docker Networks
networks:
  kitchensink-network:
    driver: bridge

# Docker Volumes
volumes:
  mongodb_data:
    driver: local
  sonarqube_data:
    driver: local